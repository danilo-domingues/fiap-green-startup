// <auto-generated />
using System;
using Fiap.Green.Startup.Repository.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

namespace Fiap.Green.Startup.Migrations
{
    [DbContext(typeof(OracleContext))]
    [Migration("20200411204403_green3")]
    partial class green3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("RM81792")
                .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn)
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            modelBuilder.Entity("Fiap.Green.Startup.Models.Cliente", b =>
                {
                    b.Property<int>("Idcliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdCliente");

                    b.Property<DateTime>("DtUltimaCompra");

                    b.Property<int>("IdPessoa");

                    b.Property<long>("NrPontos");

                    b.Property<long>("QntCompras");

                    b.HasKey("Idcliente");

                    b.HasIndex("IdPessoa");

                    b.ToTable("CLIENTE");
                });

            modelBuilder.Entity("Fiap.Green.Startup.Models.Compra", b =>
                {
                    b.Property<int>("IdCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdCompra");

                    b.Property<int?>("IdEmpresa");

                    b.Property<int>("IdProduto");

                    b.Property<int>("IdTipoPagamento");

                    b.Property<int>("IdTipoProduto");

                    b.Property<Guid>("Ordem");

                    b.Property<double>("Preco");

                    b.HasKey("IdCompra");

                    b.HasIndex("IdEmpresa");

                    b.HasIndex("IdProduto");

                    b.HasIndex("IdTipoProduto");

                    b.ToTable("COMPRA");
                });

            modelBuilder.Entity("Fiap.Green.Startup.Models.Empresa", b =>
                {
                    b.Property<int>("IdEmpresa")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdEmpresa");

                    b.Property<string>("CNPJ");

                    b.Property<string>("NomeEmpresa");

                    b.Property<bool>("ProgramaGreen");

                    b.Property<string>("RazaoSocial");

                    b.Property<string>("SegmentoEmpresa");

                    b.HasKey("IdEmpresa");

                    b.ToTable("EMPRESA");
                });

            modelBuilder.Entity("Fiap.Green.Startup.Models.Fornecedor", b =>
                {
                    b.Property<int>("IdFornecedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdFornecedor");

                    b.Property<string>("CNPJ");

                    b.Property<int>("IdEmpresa");

                    b.Property<long>("NrVendas");

                    b.HasKey("IdFornecedor");

                    b.HasIndex("IdEmpresa");

                    b.ToTable("FORNECEDOR");
                });

            modelBuilder.Entity("Fiap.Green.Startup.Models.Pagamento", b =>
                {
                    b.Property<int>("IdPagamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdPagamento");

                    b.Property<string>("DadosPagamento");

                    b.Property<int>("IdTipoPagamento");

                    b.HasKey("IdPagamento");

                    b.HasIndex("IdTipoPagamento");

                    b.ToTable("PAGAMENTO");
                });

            modelBuilder.Entity("Fiap.Green.Startup.Models.Pessoa", b =>
                {
                    b.Property<int>("IdPessoa")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdPessoa");

                    b.Property<string>("CEP");

                    b.Property<string>("CPF");

                    b.Property<string>("Cidade");

                    b.Property<string>("DataNascimento");

                    b.Property<string>("Endereco");

                    b.Property<string>("NomePessoa");

                    b.Property<string>("RG");

                    b.Property<string>("UF");

                    b.HasKey("IdPessoa");

                    b.ToTable("PESSOA");
                });

            modelBuilder.Entity("Fiap.Green.Startup.Models.Produto", b =>
                {
                    b.Property<int>("IdProduto")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdProduto");

                    b.Property<bool>("Ativo");

                    b.Property<DateTime>("DataAtualizacao");

                    b.Property<int?>("IdFornecedor");

                    b.Property<int>("IdTipoProduto");

                    b.Property<string>("NomeProduto");

                    b.Property<double>("Preco");

                    b.Property<long>("Quantidade");

                    b.HasKey("IdProduto");

                    b.HasIndex("IdFornecedor");

                    b.HasIndex("IdTipoProduto");

                    b.ToTable("PRODUTO");
                });

            modelBuilder.Entity("Fiap.Green.Startup.Models.TipoPagamento", b =>
                {
                    b.Property<int>("IdTipoPagamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdTipoPagamento");

                    b.Property<string>("Descricao");

                    b.HasKey("IdTipoPagamento");

                    b.ToTable("TIPOPAGAMENTO");
                });

            modelBuilder.Entity("Fiap.Green.Startup.Models.TipoProduto", b =>
                {
                    b.Property<int>("IdTipoProduto")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdTipoProduto");

                    b.Property<string>("NomeTipoProduto");

                    b.HasKey("IdTipoProduto");

                    b.ToTable("TIPOPRODUTO");
                });

            modelBuilder.Entity("Fiap.Green.Startup.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdUsuario");

                    b.Property<string>("Email");

                    b.Property<int>("IdPessoa");

                    b.Property<string>("NomeUsuario");

                    b.Property<string>("Senha");

                    b.Property<bool>("ativo");

                    b.HasKey("IdUsuario");

                    b.HasIndex("IdPessoa");

                    b.ToTable("USUARIO");
                });

            modelBuilder.Entity("Fiap.Green.Startup.Models.Venda", b =>
                {
                    b.Property<int>("IdVenda")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdVenda");

                    b.Property<string>("Descricao");

                    b.Property<long>("Estoque");

                    b.Property<int?>("IdEmpresa");

                    b.Property<int?>("IdFornecedor");

                    b.Property<int>("IdProduto");

                    b.Property<double>("Preco");

                    b.HasKey("IdVenda");

                    b.HasIndex("IdEmpresa");

                    b.HasIndex("IdFornecedor");

                    b.HasIndex("IdProduto");

                    b.ToTable("VENDA");
                });

            modelBuilder.Entity("Fiap.Green.Startup.Models.Cliente", b =>
                {
                    b.HasOne("Fiap.Green.Startup.Models.Pessoa", "Pessoa")
                        .WithMany()
                        .HasForeignKey("IdPessoa")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Fiap.Green.Startup.Models.Compra", b =>
                {
                    b.HasOne("Fiap.Green.Startup.Models.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("IdEmpresa");

                    b.HasOne("Fiap.Green.Startup.Models.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("IdProduto")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Fiap.Green.Startup.Models.TipoProduto", "TipoProduto")
                        .WithMany()
                        .HasForeignKey("IdTipoProduto")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Fiap.Green.Startup.Models.Fornecedor", b =>
                {
                    b.HasOne("Fiap.Green.Startup.Models.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("IdEmpresa")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Fiap.Green.Startup.Models.Pagamento", b =>
                {
                    b.HasOne("Fiap.Green.Startup.Models.TipoPagamento", "TipoPagamento")
                        .WithMany()
                        .HasForeignKey("IdTipoPagamento")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Fiap.Green.Startup.Models.Produto", b =>
                {
                    b.HasOne("Fiap.Green.Startup.Models.Fornecedor", "Fornecedor")
                        .WithMany()
                        .HasForeignKey("IdFornecedor");

                    b.HasOne("Fiap.Green.Startup.Models.TipoProduto", "TipoProduto")
                        .WithMany()
                        .HasForeignKey("IdTipoProduto")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Fiap.Green.Startup.Models.Usuario", b =>
                {
                    b.HasOne("Fiap.Green.Startup.Models.Pessoa", "Pessoa")
                        .WithMany()
                        .HasForeignKey("IdPessoa")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Fiap.Green.Startup.Models.Venda", b =>
                {
                    b.HasOne("Fiap.Green.Startup.Models.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("IdEmpresa");

                    b.HasOne("Fiap.Green.Startup.Models.Fornecedor", "Fornecedor")
                        .WithMany()
                        .HasForeignKey("IdFornecedor");

                    b.HasOne("Fiap.Green.Startup.Models.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("IdProduto")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
